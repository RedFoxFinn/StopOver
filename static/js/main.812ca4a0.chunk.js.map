{"version":3,"sources":["reportWebVitals.js","controllers/redux/slices/start.js","controllers/redux/slices/end.js","controllers/redux/slices/notifications.js","controllers/redux/slices/route.js","controllers/redux/store.js","controllers/graphql/client.js","controllers/graphql/fragments/stoptime_details.js","controllers/graphql/fragments/stop_details.js","controllers/graphql/fragments/leg_details.js","controllers/graphql/fragments/itinerary_details.js","controllers/graphql/queries/itinerary.js","controllers/graphql/types/transportmode.graphql","components/itinerary.jsx","controllers/app/api.js","components/addressInput.jsx","controllers/app/routecreator.js","components/inputModule.jsx","controllers/app/localstorage_routes.js","components/geocodeDisplayModule.jsx","components/navigation.jsx","controllers/app/defaultroute.js","stopOver.jsx","theme/muiTheme.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","startSlice","createSlice","name","initialState","street","number","municipality","geocode","reducers","setStreet","state","action","setNumber","setMunicipality","resetAddress","setGeocode","resetStart","actions","endSlice","resetEnd","notificationSlice","alert","setAlert","resetAlert","routeSlice","routes","defaultroute","setRoutes","resetRoutes","addRoute","length","route","setDefault","resetDefault","configureStore","reducer","start","end","notification","client","ApolloClient","uri","cache","InMemoryCache","STOPTIME_DETAILS","gql","STOP_DETAILS","LEG_DETAILS","ITINERARY_DETAILS","ITINERARY","Itinerary","props","useLazyQuery","called","data","error","loading","id","API_BASE_URL","NOMINATIM_API_ADDRESS_QUERY","ax","axios","create","baseUrl","AddressInput","addressState","useSelector","dispatch","useDispatch","clearFields","document","getElementById","value","Card","component","variant","sx","m","minWidth","maxWidth","marginBottom","backgroundColor","noValidate","autoComplete","Divider","Chip","icon","label","color","TextField","InputLabelProps","shrink","defaultValue","size","onChange","event","type","target","console","log","Button","onClick","get","response","lat","address","mode","message","catch","warn","createRoute","startPoint","house_number","road","city","town","lon","endPoint","queryLocation","InputModule","startAddress","endAddress","process","disabled","hasOwnProperty","newRoute","localsToSet","localsSet","JSON","parse","localStorage","getItem","appid","map","append","setItem","stringify","addLocalRoute","GeocodeDisplayModule","addressStateEnd","addressStateStart","latitude","longitude","Routing","path","children","exact","Navigation","style","display","alignItems","orientation","green","flexItem","to","margin","NavLink","StopOver","startGC","endGC","useEffect","routesSet","setTimeout","routeSet","Fragment","IconButton","fontSize","ThemeProvider","theme","createTheme","palette","primary","main","purple","secondary","neutral","grey","Typography","ver","Snackbar","open","autoHideDuration","onClose","ReactDOM","render","StrictMode","store","ApolloProvider","version"],"mappings":"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","file":"static/js/main.812ca4a0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createSlice} from '@reduxjs/toolkit';\n\nexport const startSlice = createSlice({\n  name: 'location_start',\n  initialState: {\n    street: '',\n    number: '',\n    municipality: '',\n    geocode: null\n  },\n  reducers: {\n    setStreet: (state, action) => {\n      state.street = action.street;\n    },\n    setNumber: (state, action) => {\n      state.number = action.number;\n    },\n    setMunicipality: (state, action) => {\n      state.municipality = action.municipality;\n    },\n    resetAddress: (state, action) => {\n      state.street = '';\n      state.number = '';\n      state.municipality = '';\n    },\n    setGeocode: (state, action) => {\n      state.geocode = action.geocode;\n    },\n    resetStart: (state, action) => {\n      state.street = '';\n      state.number = '';\n      state.municipality = '';\n      state.geocode = null;\n    }\n  }\n});\n\nexport const { setStreet, setNumber, setMunicipality, setGeocode, resetAddress, resetStart } = startSlice.actions;\n\nexport default startSlice.reducer;","import {createSlice} from '@reduxjs/toolkit';\n\nexport const endSlice = createSlice({\n  name: 'location_end',\n  initialState: {\n    street: '',\n    number: '',\n    municipality: '',\n    geocode: null\n  },\n  reducers: {\n    setStreet: (state, action) => {\n      state.street = action.street;\n    },\n    setNumber: (state, action) => {\n      state.number = action.number;\n    },\n    setMunicipality: (state, action) => {\n      state.municipality = action.municipality;\n    },\n    resetAddress: (state, action) => {\n      state.street = '';\n      state.number = '';\n      state.municipality = '';\n    },\n    setGeocode: (state, action) => {\n      state.geocode = action.geocode;\n    },\n    resetEnd: (state, action) => {\n      state.street = '';\n      state.number = '';\n      state.municipality = '';\n      state.geocode = null;\n    }\n  }\n});\n\nexport const { setStreet, setNumber, setMunicipality, setGeocode, resetAddress, resetEnd } = endSlice.actions;\n\nexport default endSlice.reducer;","import {createSlice} from '@reduxjs/toolkit';\n\nexport const notificationSlice = createSlice({\n  name: 'notification_control',\n  initialState: {\n    alert: null,\n  },\n  reducers: {\n    setAlert: (state, action) => {\n      state.alert = action.alert;\n    },\n    resetAlert: (state, action) => {\n      state.alert = null;\n    },\n  }\n});\n\nexport const { setAlert, resetAlert } = notificationSlice.actions;\n\nexport default notificationSlice.reducer;","import {createSlice} from '@reduxjs/toolkit';\n\nexport const routeSlice = createSlice({\n  name: 'route_control',\n  initialState: {\n    routes: [],\n    defaultroute: null\n  },\n  reducers: {\n    setRoutes: (state, action) => {\n      state.routes = action.routes;\n    },\n    resetRoutes: (state, action) => {\n      state.routes = [];\n    },\n    addRoute: (state, action) => {\n      if (state.routes.length > 0) {\n        state.routes = [...state.routes, action.route];\n      } else {\n        state.routes = [action.route];\n      }\n    },\n    setDefault: (state, action) => {\n      state.defaultroute = action.route;\n    },\n    resetDefault: (state, action) => {\n      state.defaultroute = null;\n    }, \n  }\n});\n\nexport const { setRoutes, resetRoutes, addRoute, setDefault, resetDefault } = routeSlice.actions;\n\nexport default routeSlice.reducer;","import {configureStore} from '@reduxjs/toolkit';\n\nimport startSlice from './slices/start';\nimport endSlice from './slices/end';\nimport notificationSlice from './slices/notifications';\nimport routeSlice from './slices/route';\n\nexport default configureStore({\n  reducer: {\n    start: startSlice,\n    end: endSlice,\n    notification: notificationSlice,\n    route: routeSlice\n  }\n});","\nimport {\n  ApolloClient,\n  InMemoryCache,\n  useQuery\n} from '@apollo/client';\n\nconst hslUri = 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql';\n\nexport const client = new ApolloClient({\n  uri: hslUri,\n  cache: new InMemoryCache()\n});","import { gql } from '@apollo/client';\n\nexport const STOPTIME_DETAILS = gql`\n  fragment StoptimeDetails on Stoptime {\n    serviceDay\n    scheduledDeparture\n    departureDelay\n    realtime\n    trip {\n      routeShortName\n      tripHeadsign\n    }\n  }\n`;","import { gql } from '@apollo/client';\n\nimport { STOPTIME_DETAILS } from './stoptime_details';\n\nexport const STOP_DETAILS = gql`\n  fragment StopDetails on Stop {\n    code\n    name\n    gtfsId\n    zoneId\n    vehicleMode\n    stopTimesForPatterns(omitNonPickups: true, timeRange: 1800) {\n      stopTimes {\n        ...StoptimeDetails\n      }\n    }\n  }\n  ${STOPTIME_DETAILS}\n`;","import { gql } from '@apollo/client';\n\nimport { STOP_DETAILS } from './stop_details';\n\nexport const LEG_DETAILS = gql`\n  fragment LegDetails on Leg {\n    mode\n    startTime\n    endTime\n    from {\n      lat\n      lon\n      name\n      stop {\n        ...StopDetails\n      }\n    }\n  }\n  ${STOP_DETAILS}\n`;","import { gql } from '@apollo/client';\n\nimport { LEG_DETAILS } from './leg_details';\n\nexport const ITINERARY_DETAILS = gql`\n  fragment ItineraryDetails on Itinerary {\n    walkDistance\n    duration\n    legs {\n      ...LegDetails\n    }\n  }\n  ${LEG_DETAILS}\n`;","import { gql } from '@apollo/client';\n\nimport { ITINERARY_DETAILS } from '../fragments/itinerary_details';\nimport TransportMode from '../types/transportmode.graphql';\n\nexport const ITINERARY = gql`\n  query plan(\n      $fromPlace: String!,\n      $toPlace: String!,\n      $numItineraries: Int,\n      $walkSpeed: Float,\n      $walkReluctance: Float,\n      $walkBoardCost: Int,\n      $minTransferTime: Int,\n      $date: String,\n      $time: String,\n      $transportModes: [TransportMode]\n  ) {\n    plan(\n      fromPlace: $fromPlace,\n      toPlace: $toPlace,\n      numItineraries: $numItineraries,\n      walkSpeed: $walkSpeed,\n      walkReluctance: $walkReluctance,\n      walkBoardCost: $walkBoardCost,\n      minTransferTime: $minTransferTime,\n      date: $date,\n      time: $time,\n      transportModes: $transportModes\n    ) {\n      ...ItineraryDetails\n    }\n  }\n  ${ITINERARY_DETAILS}\n`;","export default __webpack_public_path__ + \"static/media/transportmode.0e71357e.graphql\";","\nimport React from 'react';\nimport { useLazyQuery } from '@apollo/client';\n\nimport {ITINERARY} from '../controllers/graphql/queries/itinerary';\n\nexport const Itinerary = (props) => {\n  const {} = props;\n  const [loadItinerary, {called, data, error, loading}] = useLazyQuery(ITINERARY, {});\n  \n  return <section id={props.id} data-testid={props.id} >\n    {called && loading && <p>Itinerary loading</p>}\n    {called && error && <p>Itinerary loading failed</p>}\n    {called && data && <p>Itinerary loaded</p>}\n    {!called && <p>Itinerary loading not initialized</p>}\n  </section>;\n};","import axios from 'axios';\n\nconst NOMINATIM_API_BASE = 'https://nominatim.openstreetmap.org/search?addressdetails=1&';\n\nexport const API_BASE_URL = () => `${NOMINATIM_API_BASE}`;\n\nexport const NOMINATIM_API_ADDRESS_QUERY = (street, number, municipality) => {\n  return `street=${number}%20${street}&city=${municipality}&limit=2&format=json`;\n};\n\nexport const ax = axios.create({\n  baseUrl: API_BASE_URL()\n});","import React, {useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Card from '@mui/material/Card';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport PinDropIcon from '@mui/icons-material/PinDrop';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport Chip from '@mui/material/Chip';\n\nimport { ax, API_BASE_URL, NOMINATIM_API_ADDRESS_QUERY } from '../controllers/app/api';\n\nexport const AddressInput = ({end = false, start = false, id = 'default'}) => {\n  const addressState = end ? useSelector(state => state.end) : start ? useSelector(state => state.start) : null;\n  const dispatch = useDispatch();\n\n  const clearFields = () => {\n    document.getElementById(`${id}-street`).value = '';\n    document.getElementById(`${id}-number`).value = '';\n    document.getElementById(`${id}-municipality`).value = '';\n  };\n  \n  const fetchGeocode = () => {\n    const { street, number, municipality } = addressState ?? null;\n    start && ax.get(`${API_BASE_URL()}${NOMINATIM_API_ADDRESS_QUERY(street, number, municipality)}`)\n      .then((response) => {\n        const {data} = response;\n        if (data.length > 0 && data[0]?.lat && data[0]?.address) {\n          dispatch({type: 'location_start/setGeocode', geocode: data[0]});\n          dispatch({type: 'notification_control/setAlert', alert: {mode: 'info', message: 'Aloituspiste asetettu'}});\n          clearFields();\n        }\n      })\n      .catch((error) => {\n        console.warn(error.message);\n      });\n    end && ax.get(`${API_BASE_URL()}${NOMINATIM_API_ADDRESS_QUERY(street, number, municipality)}`)\n      .then((response) => {\n        const {data} = response;\n        if (data.length > 0 && data[0]?.lat && data[0]?.address) {\n          dispatch({type: 'location_end/setGeocode', geocode: data[0]});\n          dispatch({type: 'notification_control/setAlert', alert: {mode: 'info', message: 'Päätepiste asetettu'}});\n          clearFields();\n        }\n      })\n      .catch((error) => {\n        console.warn(error.message);\n      });\n  };\n\n  const handleStreet = (event) => {\n    end\n      ? dispatch({type: 'location_end/setStreet', street: event.target.value})\n      : start\n        ? dispatch({type: 'location_start/setStreet', street: event.target.value})\n        : console.log('input not set to either end or start');\n  };\n  const handleNumber = (event) => {\n    end\n      ? dispatch({type: 'location_end/setNumber', number: event.target.value})\n      : start\n        ? dispatch({type: 'location_start/setNumber', number: event.target.value})\n        : console.log('input not set to either end or start');\n  };\n  const handleMunicipality = (event) => {\n    end\n      ? dispatch({type: 'location_end/setMunicipality', municipality: event.target.value})\n      : start\n        ? dispatch({type: 'location_start/setMunicipality', municipality: event.target.value})\n        : console.log('input not set to either end or start');\n  };\n\n  return !end && !start\n    ? <Card\n      id={id}\n      data-testid={id}\n      key={id}\n      variant='outlined'\n      sx={{\n        '& > :not(style)': { m: 1 },\n        minWidth: 300,\n        maxWidth: 800,\n        marginBottom: 2,\n        backgroundColor: 'rgba(0,0,0,0.05)'\n      }}\n    >\n      <Divider>\n        <Chip icon={<ErrorOutlineIcon/>} label='Virheelliset määritykset' color='error' variant='outlined' />\n      </Divider>\n    </Card>\n    : <Card\n      id={id}\n      data-testid={id}\n      key={id}\n      component='form'\n      variant='outlined'\n      sx={{\n        '& > :not(style)': { m: 1 },\n        minWidth: 300,\n        maxWidth: 800,\n        marginBottom: 2,\n        backgroundColor: 'rgba(0,0,0,0.05)'\n      }}\n      noValidate\n      autoComplete=\"off\"\n      key={id}\n      id={id}\n    >\n      {end\n        ? <Divider>\n          <Chip icon={<PinDropIcon/>} label='Päätepiste' color='info' variant='outlined' />\n        </Divider>\n        : start\n          ? <Divider>\n            <Chip icon={<PinDropIcon/>} label='Lähtöpiste' color='info' variant='outlined' />\n          </Divider>\n          : null}\n      <TextField\n        id={`${id}-street`}\n        data-testid={`${id}-street`}\n        key={`${id}-street`}\n        InputLabelProps={{shrink: true}}\n        label='katu' defaultValue=''\n        size='small' onChange={handleStreet}\n        color='primary' />\n      <TextField\n        id={`${id}-number`}\n        data-testid={`${id}-number`}\n        key={`${id}-number`}\n        InputLabelProps={{shrink: true}}\n        label='numero' defaultValue=''\n        size='small' onChange={handleNumber}\n        sx={{maxWidth: 80}}\n        color='primary' />\n      <TextField\n        id={`${id}-municipality`}\n        data-testid={`${id}-municipality`}\n        key={`${id}-municipality`}\n        InputLabelProps={{shrink: true}}\n        label='kunta' defaultValue=''\n        size='small' onChange={handleMunicipality}\n        color='primary' />\n      <Button\n        id={`${id}-query`}\n        data-testid={`${id}-query`}\n        key={`${id}-query`}\n        variant='outlined'\n        size='medium'\n        color='secondary'\n        onClick={fetchGeocode}>Aseta</Button>\n    </Card>;\n};","\nexport function createRoute(start, end) {\n  const startPoint = `${start?.address?.house_number}, ${start?.address?.road}, ${start?.address?.city || start?.address?.town}::${start?.lat},${start?.lon}`;\n  const endPoint = `${end?.address?.house_number}, ${end?.address?.road}, ${end?.address?.city || end?.address?.town}::${end?.lat},${end?.lon}`;\n  const sp = {\n    queryLocation: startPoint,\n    street: start?.address?.road,\n    number: start?.address?.house_number,\n    municipality: start?.address?.city || start?.address?.town\n  };\n  const ep = {\n    queryLocation: endPoint,\n    street: end?.address?.road,\n    number: end?.address?.house_number,\n    municipality: end?.address?.city || end?.address?.town\n  };\n  return {\n    start: sp,\n    end: ep\n  };\n}","import React, {  } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@mui/material/Button';\n\nimport { AddressInput } from './addressInput';\nimport { createRoute } from '../controllers/app/routecreator';\nimport { addLocalRoute } from '../controllers/app/localstorage_routes';\n\nexport const InputModule = (props) => {\n  const startAddress = useSelector(state => state.start);\n  const endAddress = useSelector(state => state.end);\n  const dispatch = useDispatch();\n\n  const handleRouteCreation = (event) => {\n    const route = createRoute(startAddress.geocode, endAddress.geocode);\n    console.warn(route);\n    addLocalRoute(route);\n    dispatch({type: 'route_control/addRoute', route: route});\n    dispatch({type: 'notification_control/setAlert', alert: {mode: 'success', message: 'Reitti luotu'}});\n    dispatch({type: 'location_end/resetEnd'});\n    dispatch({type: 'location_start/resetStart'});\n  };\n\n  const checkStartGeocode = () => {\n    return startAddress.geocode !== null && startAddress.geocode.hasOwnProperty('lat');\n  };\n  const checkEndGeocode = () => {\n    return endAddress.geocode !== null && endAddress.geocode.hasOwnProperty('lat');\n  };\n\n  return <section id={props.id} data-testid={props.id} >\n    <AddressInput id={`${props.id}.address-form-start`} end={false} start={true} />\n    <AddressInput id={`${props.id}.address-form-end`} end={true} start={false} />\n    {process.env.NODE_ENV !== 'production' && <AddressInput />}\n    <Button\n      id={`${props.id}.generate-route`}\n      data-testid={`${props.id}.generate-route`}\n      variant='outlined'\n      size='medium'\n      color='secondary'\n      disabled={!checkStartGeocode() || !checkEndGeocode()}\n      onClick={handleRouteCreation}\n    >Luo reitti</Button>\n  </section>;\n};","\nimport {appid} from '../../../package.json';\n\nexport function getRoutes() {\n  const localroutes = JSON.parse(localStorage.getItem(`${appid}.routes`));\n  return localroutes ? localroutes : null;\n}\n\nexport function setRoutes(routes) {\n  localStorage.setItem(`${appid}.routes`, JSON.stringify(routes));\n}\n\nexport function addLocalRoute(newRoute) {\n  let localsToSet = [];\n  const localsSet = JSON.parse(localStorage.getItem(`${appid}.routes`));\n  if (localsSet !== null && localsSet.length > 0) {\n    localsSet.map((route) => {\n      route.hasOwnProperty('latitude') && localsToSet.append(route);\n    });\n  }\n  localsToSet = [...localsToSet, newRoute];\n  localStorage.setItem(`${appid}.routes`, JSON.stringify(localsToSet));\n}\n\nexport function resetRoutes() {\n  localStorage.removeItem(`${appid}.routes`);\n}","import React, {  } from 'react';\nimport { useSelector } from 'react-redux';\n\nexport const GeocodeDisplayModule = (props) => {\n  const addressStateEnd = useSelector(state => state.end);\n  const addressStateStart = useSelector(state => state.start);\n\n  function endGeocodeIsSet() {\n    return addressStateEnd.geocode\n      ? <p>{addressStateEnd.geocode.latitude},{addressStateEnd.geocode.longitude}</p> : <p>Päätepiste puuttuu</p>;\n  }\n  function startGeocodeIsSet() {\n    return addressStateStart.geocode\n      ? <p>{addressStateStart.geocode.latitude},{addressStateStart.geocode.longitude}</p> : <p>Lähtöpiste puuttuu</p>;\n  }\n\n  return <section id={props.id} data-testid={props.id} >\n    {startGeocodeIsSet()}\n    {endGeocodeIsSet()}\n  </section>;\n};","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport { green } from '@mui/material/colors';\n\nimport { Itinerary } from './itinerary';\nimport { InputModule } from './inputModule';\nimport { GeocodeDisplayModule } from './geocodeDisplayModule';\n\nconst Navigation = ({id}) => {\n  return <nav id={id} data-testid={id} style={{display: 'inline-flex', alignItems: 'center'}} >\n    <Divider orientation=\"vertical\" variant=\"middle\" color={green['A700']} flexItem />\n    <Button\n      to='/'\n      sx={{\n        margin: 1\n      }}\n      variant='outlined'\n      component={NavLink}\n    >Reitit</Button>\n    <Divider orientation=\"vertical\" variant=\"middle\" color={green['A700']} flexItem />\n    <Button\n      to='/details'\n      sx={{\n        margin: 1\n      }}\n      variant='outlined'\n      component={NavLink}\n    >Pistetiedot</Button>\n    <Divider orientation=\"vertical\" variant=\"middle\" color={green['A700']} flexItem />\n    <Button\n      to='/planning'\n      sx={{\n        margin: 1\n      }}\n      variant='outlined'\n      component={NavLink}\n    >Reittisuunnittelu</Button>\n    <Divider orientation=\"vertical\" variant=\"middle\" color={green['A700']} flexItem />\n  </nav>;\n};\n\nexport const Routing = (props) => {\n  \n  return <section id={props.id} data-testid={props.id} >\n    <Switch>\n      <Route path='/planning' children={<InputModule id={`${props.id}.planning`} />} />\n      <Route path='/details' children={<GeocodeDisplayModule id={`${props.id}.geocode`} />}/>\n      <Route exact path='/' children={<Itinerary id={`${props.id}.routes`} />}/>\n    </Switch>\n  </section>;\n};\n\nexport default Navigation;","\n/**\n * defaultroute is constant that will provide the start- and endpoint addresses\n * of the default route of the application and API calls\n */\nexport const defaultroute = {\n  start: {\n    street: 'soittilanmäki',\n    number: '6',\n    municipality: 'espoo'\n  },\n  end: {\n    street: 'lapinlahdenkatu',\n    number: '16',\n    municipality: 'helsinki'\n  },\n};","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ThemeProvider } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Snackbar from '@mui/material/Snackbar';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { customTheme } from './theme/muiTheme';\nimport Navigation, {Routing} from './components/navigation';\nimport { getRoutes } from './controllers/app/localstorage_routes';\nimport { defaultroute } from './controllers/app/defaultroute';\nimport { createRoute } from './controllers/app/routecreator';\n\nimport { ax, API_BASE_URL, NOMINATIM_API_ADDRESS_QUERY } from './controllers/app/api';\n\nexport const StopOver = (props) => {\n  const { start, end } = defaultroute;\n  const {alert} = useSelector(state => state.notification);\n  const dispatch = useDispatch();\n  let startGC;\n  let endGC;\n\n  useEffect(() => {\n    let defaultSet = false;\n    let routesSet = false;\n    ax.get(`${API_BASE_URL()}${NOMINATIM_API_ADDRESS_QUERY(start.street, start.number, start.municipality)}`)\n      .then((response) => {\n        const {data} = response;\n        if (data.length > 0 && data[0]?.lat && data[0]?.address) {\n          startGC = data[0];\n        }\n      })\n      .catch((error) => {\n        console.warn(error.message);\n      });\n    ax.get(`${API_BASE_URL()}${NOMINATIM_API_ADDRESS_QUERY(end.street, end.number, end.municipality)}`)\n      .then((response) => {\n        const {data} = response;\n        if (data.length > 0 && data[0]?.lat && data[0]?.address) {\n          endGC = data[0];\n        }\n      })\n      .catch((error) => {\n        console.warn(error.message);\n      });\n    const route = createRoute(startGC, endGC);\n    dispatch({type: 'route_control/setDefault', route: route});\n    defaultSet = true;\n    const routes = getRoutes();\n    if (routes !== null && routes.length > 0) {\n      dispatch({type: 'route_control/setRoutes', routes: routes});\n      routesSet = true;\n    }\n    if (defaultSet && routesSet) {\n      dispatch({type: 'notification_control/setAlert', alert: {mode: 'success', message: 'Oletusreitti luotu'}});\n      setTimeout(() => {\n        dispatch({type: 'notification_control/setAlert', alert: {message: 'Reitit palautettu'}});\n      }, 3000);\n    } else if (defaultSet && !routeSet) {\n      dispatch({type: 'notification_control/setAlert', alert: {mode: 'success', message: 'Oletusreitti luotu'}});\n    } else if (!defaultSet && routeSet) {\n      dispatch({type: 'notification_control/setAlert', alert: {message: 'Reitit palautettu'}});\n    }\n  }, [start, end, startGC, endGC]);\n\n  const action = (\n    <React.Fragment>\n      <Button color=\"secondary\" size=\"small\" onClick={() => dispatch({type: 'notification_control/resetAlert'})}>\n        UNDO\n      </Button>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={() => dispatch({type: 'notification_control/resetAlert'})}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  return <article id={props.id} data-testid={props.id} >\n    <Router>\n      <ThemeProvider theme={customTheme()}>\n        <Typography variant='h5' >StopOver - {props.ver}</Typography>\n        <Navigation id={`${props.id}.navigation`} />\n        <Routing id={`${props.id}.content`} />\n        <Snackbar\n          id={`${props.id}.snack`}\n          open={alert !== null}\n          autoHideDuration={6000}\n          onClose={() => dispatch({type: 'notification_control/resetAlert'})}\n          message={alert?.message ?? 'testi'}\n          action={action}\n        />\n      </ThemeProvider>\n    </Router>\n  </article>;\n};","\nimport { createTheme } from '@mui/material/styles';\nimport { purple, green, grey } from '@mui/material/colors';\n\nexport const customTheme = () => {\n  return createTheme({\n    palette: {\n      primary: {\n        // Purple and green play nicely together.\n        main: purple['A700'],\n      },\n      secondary: {\n        // This is green.A700 as hex.\n        main: green['A700'],\n      },\n      neutral: {\n        main: grey['A700'],\n      }\n    },\n  });\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloProvider } from '@apollo/client';\nimport { Provider } from 'react-redux';\n\nimport store from './controllers/redux/store';\nimport { client } from './controllers/graphql/client';\nimport {\n  appid,\n  appname,\n  version\n} from '../package.json';\nimport {StopOver} from './stopOver';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <ApolloProvider client={client} >\n        <StopOver id={appid} ver={version} />\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}